// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// xpl_nsignC
double xpl_nsignC(NumericVector x);
RcppExport SEXP _xplorerr_xpl_nsignC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(xpl_nsignC(x));
    return rcpp_result_gen;
END_RCPP
}
// xpl_gvar
List xpl_gvar(NumericVector ln, NumericVector ly);
RcppExport SEXP _xplorerr_xpl_gvar(SEXP lnSEXP, SEXP lySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ln(lnSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ly(lySEXP);
    rcpp_result_gen = Rcpp::wrap(xpl_gvar(ln, ly));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_xplorerr_xpl_nsignC", (DL_FUNC) &_xplorerr_xpl_nsignC, 1},
    {"_xplorerr_xpl_gvar", (DL_FUNC) &_xplorerr_xpl_gvar, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_xplorerr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
